                   J E S 2  J O B  L O G  --  S Y S T E M  2 9 6 4  --  N O D E  S V S C J E S 2        

 
19.34.32 JOB07825 ---- THURSDAY,  10 SEP 2020 ----
19.34.32 JOB07825  IRR010I  USERID KC03I74  IS ASSIGNED TO THIS JOB.
19.34.32 JOB07825  ICH70001I KC03I74  LAST ACCESS AT 19:33:41 ON THURSDAY, SEPTEMBER 10, 2020
19.34.32 JOB07825  $HASP373 KC03I74A STARTED - INIT 1    - CLASS A        - SYS 2964
19.34.33 JOB07825  $HASP395 KC03I74A ENDED - RC=0000

------ JES2 JOB STATISTICS ------


  10 SEP 2020 JOB EXECUTION DATE


           66 CARDS READ


          141 SYSOUT PRINT RECORDS


            0 SYSOUT PUNCH RECORDS


           14 SYSOUT SPOOL KBYTES


         0.01 MINUTES EXECUTION TIME
!! END OF JES SPOOL FILE !!
       1 //KC03I74A JOB ,'C. MCANTIRE',MSGCLASS=H                                JOB07825
         //*                                                                             
         //*****************************************************************             
         //*                                                               *             
         //*  CSCI 465               ASSIGNMENT 2               FALL 2020  *             
         //*                                                               *             
         //*  DEVELOPER NAME: Cody McAntire                                *             
         //*  DATE DUE: 09/11/2020                                         *             
         //*                                                               *             
         //*  PURPOSE:The primary purpose of this assignment is to give    *             
         //*  you some experience in writing and documenting simple        *             
         //*  JCL. Program fetch is what we call the process of "fetching" *             
         //*  a program object (now referred to by IBM as a program object)*             
         //*  from an existing load library and executing it. This is what *             
         //*  happens in the real world after a program is developed,      *             
         //*  tested thoroughly, and approved for promotion into production*             
         //*                                                               *             
         //*  It would be ridiculous if we had to compile a COBOL program, *             
         //*  assemble an Assembly language program, or, for that matter,  *             
         //*  compile ANY program every time we need to execute it.        *             
         //*  Instead, the program is                                      *             
         //*  compiled (or assembled) and "link-edited or linkage-edited"  *             
         //*  by the Linkage Editor (a process now referred to by IBM as   *             
         //*  being "bound" by the Binder).                                *             
         //*                                                               *             
         //*  If all goes well, the Binder produces a so-called "permanent"*             
         //*  program object which is stored as a member with the same name*             
         //*  as the program itself (COBOL PROGRAM-ID  or Assembler CSECT) *             
         //*  in what we call a load library, i.e., a PDSE set up with     *             
         //*  parameters to hold only what we program objects, the         *             
         //*  mainframe's version of an executable, or .exe, file.         *             
         //*****************************************************************             
         //*  JSTEP01 WILL FETCH AND EXECUTE A PROGRAM OBJECT NAMED        *             
         //*  READRECS STORED IN DECKERS LOAD LIBRARY PDSE:                *             
         //*  JSTEP01  EXEC PGM=IGYCRCTL,PARM=APOST                        *             
       2 //JSTEP01  EXEC PGM=READRECS                                                    
         //*  INDICATE LOADLIB WHERE THE READRECS MODULE WILL BE FETCHED   *             
       3 //STEPLIB  DD DSN=KC02322.CSCI465.LOADLIB,DISP=SHR                              
         //*                                                               *             
         //*  READ INPUT FROM DECKERS PROGRAM (DATA2)                      *             
       4 //RECSIN   DD DSN=KC02322.CSCI465.DATAFA20(DATA2),                              
         //            DISP=SHR,                                                         
         //            SPACE=(TRK,(1,1))                                                 
         //*                                                               *             
         //*  USED FOR OUTPUT - THIS SHOULD BE AN 80 BYTE LRECL TEMP DS    *             
       5 //RECSOUT  DD DSN=&&TEMP1,                                                      
         //            SPACE=(TRK,(5,1)),                                                
         //            DISP=(NEW,PASS,DELETE)                                            
         //*  THIRD DD CARD-IN CASE OF ABEND PROVIDE LARGE DUMP OF STORAGE *             
       6 //SYSUDUMP DD SYSOUT=*                                                          
         //*                                                               *             
         //*  JSTEP02 WILL FETCH AND EXEC DECKERS OTHER PROGRAM - WRTERECS *             
         //*  FROM THE SAME LOAD LIB                                                     
       7 //JSTEP02  EXEC PGM=WRTERECS,COND=(0,LT)                                        
         //*                                                               *             
         //*  LOADLIB WHERE WRTERECS WILL BE FETCHED FROM                  *             
       8 //STEPLIB  DD DSN=KC02322.CSCI465.LOADLIB,DISP=SHR                              
         //*                                                                             
         //*  READ INPUT-SHOULD REFER TO 80BYTE LRECL TEMP DS FROM STEP 1  *             
       9 //RECSIN   DD DSN=&&TEMP1,DISP=(OLD,DELETE,DELETE)                              
         //*                                                                             
         //*  OUTPUT ALL DATA FROM DATA SET                                *             
      10 //RECSOUT  DD SYSOUT=*                                                          
         //*                                                               *             
         //*SAME DUMP FROM BEFORE                                                        
      11 //SYSUDUMP DD SYSOUT=                                                           
!! END OF JES SPOOL FILE !!
ICH70001I KC03I74  LAST ACCESS AT 19:33:41 ON THURSDAY, SEPTEMBER 10, 2020
IEFA111I KC03I74A IS USING THE FOLLOWING JOB RELATED SETTINGS:
         SWA=ABOVE,TIOT SIZE=32K,DSENQSHR=DISALLOW,GDGBIAS=JOB
IEF236I ALLOC. FOR KC03I74A JSTEP01
IGD103I SMS ALLOCATED TO DDNAME STEPLIB
IGD103I SMS ALLOCATED TO DDNAME RECSIN
IGD101I SMS ALLOCATED TO DDNAME (RECSOUT )
        DSN (SYS20254.T193432.RA000.KC03I74A.TEMP1.H01   )
        STORCLAS (TEMPSC) MGMTCLAS (        ) DATACLAS (        )
        VOL SER NOS= TEMP00                                                                
IEF237I JES2 ALLOCATED TO SYSUDUMP
IEF142I KC03I74A JSTEP01 - STEP WAS EXECUTED - COND CODE 0000
IGD104I KC02322.CSCI465.LOADLIB                      RETAINED,  DDNAME=STEPLIB 
IGD104I KC02322.CSCI465.DATAFA20                     RETAINED,  DDNAME=RECSIN  
IGD106I SYS20254.T193432.RA000.KC03I74A.TEMP1.H01    PASSED,    DDNAME=RECSOUT 
IEF285I   KC03I74.KC03I74A.JOB07825.D0000101.?         SYSOUT        
IEF373I STEP/JSTEP01 /START 2020254.1934
IEF032I STEP/JSTEP01 /STOP  2020254.1934 
        CPU:     0 HR  00 MIN  00.00 SEC    SRB:     0 HR  00 MIN  00.00 SEC    
        VIRT:    88K  SYS:   256K  EXT:     2588K  SYS:    12124K
        ATB- REAL:                  1044K  SLOTS:                     0K
             VIRT- ALLOC:      11M SHRD:       0M
IEF236I ALLOC. FOR KC03I74A JSTEP02
IGD103I SMS ALLOCATED TO DDNAME STEPLIB
IGD103I SMS ALLOCATED TO DDNAME RECSIN
IEF237I JES2 ALLOCATED TO RECSOUT
IGD101I SMS ALLOCATED TO DDNAME (SYSUDUMP)
        DSN (SYS20254.T193432.RA000.KC03I74A.R0163114    )
        STORCLAS (TEMPSC) MGMTCLAS (        ) DATACLAS (        )
        VOL SER NOS= TEMP00                                                                
IEF142I KC03I74A JSTEP02 - STEP WAS EXECUTED - COND CODE 0000
IGD104I KC02322.CSCI465.LOADLIB                      RETAINED,  DDNAME=STEPLIB 
IGD105I SYS20254.T193432.RA000.KC03I74A.TEMP1.H01    DELETED,   DDNAME=RECSIN  
IEF285I   KC03I74.KC03I74A.JOB07825.D0000102.?         SYSOUT        
IGD105I SYS20254.T193432.RA000.KC03I74A.R0163114     DELETED,   DDNAME=SYSUDUMP
IEF373I STEP/JSTEP02 /START 2020254.1934
IEF032I STEP/JSTEP02 /STOP  2020254.1934 
        CPU:     0 HR  00 MIN  00.00 SEC    SRB:     0 HR  00 MIN  00.00 SEC    
        VIRT:    92K  SYS:   256K  EXT:     2584K  SYS:    12124K
        ATB- REAL:                  1044K  SLOTS:                     0K
             VIRT- ALLOC:      11M SHRD:       0M
IEF375I  JOB/KC03I74A/START 2020254.1934
IEF033I  JOB/KC03I74A/STOP  2020254.1934 
        CPU:     0 HR  00 MIN  00.00 SEC    SRB:     0 HR  00 MIN  00.00 SEC    
!! END OF JES SPOOL FILE !!

QUOTATIONS FROM TWO IMPORTANT AMERICAN HISTORICAL DOCUMENTS            FALL 2020

"We hold these truths to be self-evident, that all men are created              

equal, that they are endowed by their Creator with certain unalienable          

Rights, that among these are Life, Liberty and the pursuit of                   

Happiness." -- Declaration of Independence, 1776                                

"We the People of the United States, in Order to form a more perfect            

Union, establish Justice, insure domestic Tranquility, provide for the          

common defence, promote the general Welfare, and secure the Blessings           

of Liberty to ourselves and our Posterity, do ordain and establish this         

Constitution of the United States of America." -- Preamble to the U.S.          

Constitution, 1789                                                              
!! END OF JES SPOOL FILE !!
